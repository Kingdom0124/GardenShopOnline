@model GardenShopOnline.Models.Product

@{
    ViewBag.Title = "Details";
    int i = 1;


}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
<link rel="stylesheet" href="~/assets/customer/css/ProductDel.css" />

<body>
    <main class="main-content">
        <div class="single-product-area my-4">
            <div class="container">
                <h5>Product:</h5>

                <div class="row">
                    <div class="col-md-6">
                        <div class="card-wrapper">
                            <div class="card">
                                <!-- card left -->
                                <div class="product-imgs">
                                    <div class="img-display">
                                        <div class="img-showcase">
                                            @foreach (var item in Model.ImageProducts)
                                            {
                                                <img width="200" height="650" src="~/assets/images/@item.Image">
                                            }
                                        </div>
                                    </div>

                                    <div class="img-select">
                                        @foreach (var item in Model.ImageProducts)
                                        {
                                            <div class="img-item">
                                                <a href="#" data-id="@(i++)">
                                                    <img width="200" height="200" src="~/assets/images/@item.Image">
                                                </a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 pt-5 pt-lg-0">
                        <div class="single-product-content">
                            <h2 class="title">@Model.Name</h2>
                            <div class="price-box">
                                <span class="new-price">@Model.Price.ToString("N0") ₫</span>
                            </div>
                            <div class="pb-4">
                                <div class="review-status">
                                    <a href="#">( @ViewData["CommentCount"] Review )</a>
                                </div>
                            </div>
                            <ul class="quantity-with-btn d-flex align-items-center">
                                @if (!User.IsInRole("Admin") && !User.IsInRole("Staff") && Model.Quantity > 0)
                                {
                                    <li class="quantity">
                                        <div class="cart-plus-minus">
                                            <input class="cart-plus-minus-box" value="1" min="1" type="text" oninput="this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null">
                                        </div>
                                    </li>

                                    <li class="add-to-cart">
                                        <a class="btn btn-custom-size lg-size btn-pronia-primary" href="@Url.Action("AddToCart", "ShoppingCart")" data-id="@Model.ID">
                                            Add to
                                            cart
                                        </a>
                                    </li>
                                }
                                <li>
                                    @Model.Quantity Available Stocks
                                </li>
                            </ul>
                            <br />
                            <div class="product-category">
                                <span class="title">SKU:</span>
                                <ul>
                                    <li>
                                        <a href="#">@Model.ID</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="product-category product-tags">
                                <span class="title">Type :</span>
                                <ul>
                                    <li>
                                        <a href="#">@Model.Type.Name</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="product-category">
                                <span class="title">Category :</span>
                                <ul>
                                    <li>
                                        <a href="#">@Model.Category.Name</a>
                                    </li>
                                </ul>
                            </div>
                            <h3 class="title">@Model.Place</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="product-tab-area">
            <div class="container">
                <div class="tab">
                    <button class="tablinks" onclick="openOption(event, 'Info')">Info</button>
                    <button class="tablinks" onclick="openOption(event, 'Comment')">
                        Comment(@ViewData["CommentCount"])
                    </button>
                </div>

                <div id="Info" class="tabcontent">
                    <h3>Info</h3>
                    <p>
                        @Html.Raw(Model.Description)
                    </p>
                </div>

                <div id="Comment" class="tabcontent">
                    <h3>Comment</h3>
                    <form class="review-form">
                        <div class="form-group">
                            @Html.Action("CommentProduct", "CommentProducts", new { product_id = Model.ID })

                            <label>Your message</label>
                            <ul>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <form class="feedback-form">
                                        <input type="hidden" id="product_id" value="@Model.ID" />
                                        <div class="form-field mt-30">
                                            <textarea name="message" id="Message" placeholder="Message" class="form-control" rows="10" required></textarea>
                                        </div>
                                        <div class="button-wrap pt-5">
                                            <button type="button" value="submit" onclick="Comment()" class="round-black-btn" name="submit">
                                                Post Comment
                                            </button>
                                        </div>
                                    </form>
                                }
                                else
                                {
                                    <p>To leave a comment. <a href="@Url.Action("Login", "Account")">Login into the system</a></p>
                                }
                            </ul>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- Begin Product Area -->
        <div class="product-area section-space-y-axis-90">
            <div class="container">
                <div class="row">
                    <div class="section-title-wrap without-tab">
                        <h2 class="section-title">Related Products</h2>
                    </div>
                    <div class="col-lg-12">
                        <div class="swiper-container product-slider">
                            <div class="swiper-wrapper">
                                @Html.Action("GetRelatedProducts", "Products", new { productId = Model.ID, typeId = Model.TypeID, categoryId = Model.CategoryID })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Product Area End Here -->
    </main>

    <div class="modal quick-view-modal fade" id="quickModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="quickModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-pronia-primary">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Notification</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" data-tippy="Close" data-tippy-inertia="true" data-tippy-animation="shift-away" data-tippy-delay="50" data-tippy-arrow="true" data-tippy-theme="sharpborder">
                    </button>
                </div>
                <div class="modal-body">
                    <p class="mb-0">Your comment has been recorded, to avoid harassment, our website will check if there is no abnormality, it will be displayed publicly.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn  btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        const imgs = document.querySelectorAll('.img-select a');
        const imgBtns = [...imgs];
        let imgId = 1;

        imgBtns.forEach((imgItem) => {
            imgItem.addEventListener('click', (event) => {
                event.preventDefault();
                imgId = imgItem.dataset.id;
                slideImage();
            });
        });

        function slideImage() {
            const displayWidth = document.querySelector('.img-showcase img:first-child').clientWidth;

            document.querySelector('.img-showcase').style.transform = `translateX(${- (imgId - 1) * displayWidth}px)`;
        }

        window.addEventListener('resize', slideImage);
    </script>
    <script>
        function openOption(evt, Option) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(Option).style.display = "block";
            evt.currentTarget.className += " active";
        }
    </script>

    @section scripts {
        <script type="text/javascript">
        $('a.add-to-cart, .add-to-cart .btn').on('click', function (e) {
            e.preventDefault();
            var id = $(this).data('id');
            var quantity = $(this).parents().find('input.cart-plus-minus-box').val();
            // Call action to add product to cart
            $.ajax({
                url: $(this).attr('href'),
                type: 'GET',
                data: { id, quantity }
            }).done(function (data) {
                if (!data.error) {
                    // Refresh mini cart
                    getMiniCart();
                    toastr.options.positionClass = 'toast-bottom-right';
                    toastr["success"]("Add succeeded!");
                } else {
                    // Show error message
                    toastr.options.positionClass = 'toast-bottom-right';
                    toastr["error"]("Oops, you have overselected product inventory! Product only have " + data.quantity + " items left");
                }
            });
        });

        $('.qtybutton').on('click', function () {
            var $button = $(this);
            var oldValue = $button.parent().find('input').val();
            if ($button.hasClass('inc')) {
                var newVal = parseFloat(oldValue) + 1;
            } else {
                // Don't allow decrementing below zero
                if (oldValue > 1) {
                    var newVal = parseFloat(oldValue) - 1;
                } else {
                    newVal = 1;
                }
            }
            $button.parent().find('input').val(newVal);
        });

        function Comment() {
            var product_id = $('#product_id').val();
            var Message = $('#Message').val();

            $.ajax({
                url: '@Url.Action("Comment_product", "Products")',
                data: {
                    product_id: product_id,
                    content: Message,
                }
            }).done(function (result) {
                $('#Message').val('');
                $('#quickModal.close').css('display', 'none');
                $('#quickModal').modal('show');

            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(textStatus)
                console.log(errorThrown)
                alert("Something Went Wrong, Try Later");
            });
        }
        </script>
    }
</body>
